此程序测试结构体的数据部分的结构表示。

1.试验不同字节长度的无虚函数的结构体，以及其子结构提的数据部分的表示。
2.试验不同长度的带虚函数的结构体，以及其子结构体的数据部分的表示。

意义：
探索将结构体数据直接用于网络传输、持久存储可能存在的副作用。
直接将结构提指针强制转换成字节指针之后，用与网络传输、文件持久化非常方便。但是，副作用很多，很多文献、网文明确反对这种做法。如果是在可靠的介质/传输层实现应用系统的话，制作`接使用结构体确实不利与代码的可移植性;而对于底层的代码，介质的可靠性本来就是一个不能忽略的关注点，因此此条建议有它的适用范围。
副作用主要有：

1.字节对齐，编译器会加入额外的字节，且加入方法与编译选项、机器、操作系统有关;
2.大端/小端机器，会影响字节顺序;
3.如果加入需函数，虚函数表会影响结构的大小。而且，需函数表与编译器、机器、操作系统有关。

如果不用结构体，
1.必须逐个字段编写load/store代码，工作量比较大; 
2.如果是非阻塞异步io，那么有pending数据的时候，处理复杂，最好是同步io;
3.对于错误率高的介质，比如直接在链路层的协议，解析失败不能“断开连接”或者“purge data”来达到“复位”状态的目的; 而已经被load的书据不能被撤销之后尝试“对准”。 

只要将前述的副作用消除掉了，就可以使用结构体。
