OBJECTS = $(subst .cpp,.o,$(SOURCES))

INCLUDE += -I/usr/include -I/usr/local/include \
	-I/Users/wangxy/wincom/binaries/boost_1_59_0/include

LIB += -L/usr/lib -L/usr/local/lib -lboost_system -L/Users/wangxy/wincom/binaries/boost_1_59_0/lib


CXX_FLAGS += -O3 #-pg
	#-g2 -DBOOST_ASIO_ENABLE_HANDLER_TRACKING -std=c++0x -fvisibility=hidden

GCC_PREFIX=#mips64-linux-gnu-
CC=$(GCC_PREFIX)gcc
CXX=$(GCC_PREFIX)g++
AR=$(GCC_PREFIX)ar
AS=$(GCC_PREFIX)as
LD=$(GCC_PREFIX)ld
NM=$(GCC_PREFIX)nm
RANLIB=$(GCC_PREFIX)ranlib
STRIP=$(GCC_PREFIX)strip
OBJCOPY=$(GCC_PREFIX)objcopy
OBJDUMP=$(GCC_PREFIX)objdump
READELF=$(GCC_PREFIX)readelf


all: $(TARGET)


$(TARGET): $(OBJECTS)
	$(CXX) $(CXX_FLAGS) -o $@ $^ $(LIB)
#	$(STRIP) $@

$(OBJECTS): %.o: %.cpp
	 $(CXX) $(CXX_FLAGS) -c $^ -o $@ $(INCLUDE)

# prepare build dir & clean
init:
ifneq (build, $(wildcard build))
		mkdir -p build
endif

clean:
ifeq ($(TARGET), $(wildcard $(TARGET)))
	rm -f $(TARGET)
	rm -f $(OBJECTS)
endif
ifeq (build, $(wildcard build))
	rm -rf build
endif

